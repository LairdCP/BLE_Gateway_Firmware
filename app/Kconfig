# Copyright (c) 2020 Laird Connectivity
# SPDX-License-Identifier: Apache-2.0

menuconfig USER_APPLICATION
     bool "Config User Application"
	 default y

if USER_APPLICATION

config LAIRD_CONNECTIVITY_DEBUG
    bool
    default n

config SENSOR_MAX_AD_SIZE
    int "The maximum size for ads sent to sensor task"
    default 67
    help
        67 - BT510 coded PHY advertisement
        31 - BT510 1M PHY advertisement and scan response

menuconfig BL654_SENSOR
    bool "BL654 sensor support"
    default y

if BL654_SENSOR

config BL654_SENSOR_SEND_TO_AWS_RATE_SECONDS
    int "The period at which to send BL654 Sensor data to AWS"
    default 60
    range 30 3600

config BL654_SENSOR_NAME
    string "The advertised name of the BL654 sensor (that is scanned for)"
    default "BL654 BME280 Sensor"
    help
        Any sensor with the ESS service should work
        (temperature, humidity, and pressure).

endif # BL654_SENSOR

config SCAN_FOR_BT510
    bool "Parse Bluetooth advertisements for BT510 Sensor"
    default y

config SCAN_FOR_BT510_CODED
    bool "Scan for coded PHY and 1M advertisements from BT510"
    default y
    depends on SCAN_FOR_BT510
    depends on BT_EXT_ADV
    depends on BT_LL_NRFXLIB_VS_INCLUDE
    depends on BT_LL_NRFXLIB_DEFAULT
    help
        Coded PHY (extended advertisements) requires Nordic binary

config CLOUD_QUEUE_SIZE
    int "The size of queue for sending messages to AWS or LWM2M client"
    default 32

config CLOUD_PURGE_THRESHOLD
    int "The threshold at which the cloud queue is purged."
    default 24

config CLOUD_FIFO_CHECK_RATE_SECONDS
    int "The rate at which the cloud fifo is checked"
    default 1

config AWS_TOPIC_MAX_SIZE
    int "Maximum size for AWS topic strings"
    default 64

menuconfig BLUEGRASS
    bool "Laird Connectivity Bluegrass cloud"
    help
        Send sensor data to Bluegrass cloud platform

if BLUEGRASS

config AWS_DATA_SEND_LED_OFF_DURATION_MILLISECONDS
    int "The amount of time to turn off the green LED when data is sent"
    default 30
    range 1 1000
    help
        Green LED is turned on when connected to AWS.
        Green LED is flashed off when data is sent.
        Implemented using sleep.
        Subscription processing doesn't blink green LED.

config AWS_KEEP_ALIVE_SECONDS
    int "The modem's RSSI is sent at this rate to keep AWS connection alive"
    default 30
    range 1 80
    help
        This can't be more than the AWS connection timeout.

config USE_SINGLE_AWS_TOPIC
    bool "Send all sensor data to gateway topic"
    help
        PSM mode doesn't easily support receiving information from the
        Laird Connectivity Cloud demo.
        When using a single topic [BT510] temperature data is sent to the
        gateway's topic vs. the individual sensor topic.
        BL654 sensor data is always sent to the gateway topic.

config APP_CA_CERT_TAG
    int "mbedTLS tag for CA"
    default 1

config APP_DEVICE_CERT_TAG
    int "mbedTLS tag for device cert and private key"
    default 2

config JSON_BRACKET_BUFFER_SIZE
    int "The maximum size JSON message that can be processed"
    default 1536
    help
        This applies to sensor messages received over Bluetooth.

config SENSOR_TOPIC_FMT_STR_PREFIX
	string "Default location for sensor data"
	default "$aws/things/%s/shadow"
    help
        "%s will be replaced by the sensor BT address"

config SHADOW_IN_MAX_SIZE
    int "Maximum size of subscription/shadow that can be processed"
    default 8192
    help
        The timestamps can make the shadow larger than 7K bytes.

config SENSOR_TABLE_SIZE
    int "Number of sensors that can be monitored"
    default 15
    range 0 15

config SENSOR_LOG_MAX_SIZE
    int "The maximum number of stored sensor events"
    default 30
    range 1 30
    help
        Limited by the memory pool
        Limited by MQTT or modem.

config SENSOR_SUBSCRIPTION_DELAY_SECONDS
    int "The number of seconds to wait after a sensor is whitelisted before subscribing to the delta and get topics."
    default 10
    range 6 60
    help
        The server needs time to generate the sensor object.
        When the permissions are changed on AWS a disconnect may occur.

config VSP_TX_ECHO
    bool "Print Virtual Serial Port data transmitted to sensors"
    help
        This occurs in task context because strings can be long

config VSP_RX_ECHO
    bool "Print Virtual Serial Port data received from sensors"
    help
        This occurs in task context because strings can be long

config APP_AWS_MAX_CREDENTIAL_SIZE
    int "AWS max credential size"
    default 2560
    help
        Maximum size of a credential. Used to allocate a buffer for
        storing credentials.

config APP_AWS_CLIENT_ID_MAX_LENGTH
    int "AWS clint ID max length"
    default 32
    help
        Max length AWS client ID. This is used for the MQTT connection ID.

config APP_AWS_ENDPOINT_MAX_LENGTH
    int "AWS endpoint max length"
    default 256
    help
        Max length of AWS endpoint hostname.

endif # BLUEGRASS

config JSON_LOG_PUBLISH
    bool "Print data published to AWS"

config JSON_LOG_TOPIC
    bool "Print the topic that documents are published to or received from"

config JSON_LOG_MQTT_RX_DATA
    bool "Enable/Disable printing of received MQTT data."

menuconfig LC_LWM2M
    bool "Laird Connectivity LWM2M Demo Options"
    depends on LWM2M

if LC_LWM2M

config LWM2M_ENABLE_PSK_GENERATION
    bool "Allow new PSK to be generated over Bluetooth"
    default y

config LWM2M_PSK_SIZE
    int
    default 16

config LWM2M_CLIENT_ID_MAX_SIZE
    int "Maximum size of the client id string"
    default 32
    range 1 64

config LWM2M_PEER_URL_MAX_SIZE
    int "Maximum size of the peer URL string"
    default 128
    range 1 512

config LWM2M_CLIENT_ENDPOINT_MAX_SIZE
    int "Maximum size of the client endpoint name"
    default 64

config LWM2M_PSK_TAG
    int "Tag used by TLS for referencing PSK"
    depends on LWM2M_DTLS_SUPPORT
    default 3
    help
        Must be unique in the system.

endif # LC_LWM2M

config JSMN_NUMBER_OF_TOKENS
    int "The number of tokens for jsmn"
    default 512
    help
        JSMN is used to process shadow and CoAP messages.
        The maximum size of the shadow (and tokens required) is affected by
        the number of sensors and the sensor log size.  The timestamps that are
        generated by AWS make the shadow large.

config APP_AWS_CUSTOMIZATION
    bool "Customize AWS connection"
    help
        Enabling this gives the user the ability to adjust all the pertinent AWS
        connection options via UART commands. This gives the user the ability
        to change what AWS server their device connects to.

if APP_AWS_CUSTOMIZATION

config APP_AWS_ROOT_CA_FILE_NAME
    string "Root CA file name"
    default "root_ca.pem"
    help
        Name of the file that the will be read from the filesystem

config APP_AWS_CLIENT_CERT_FILE_NAME
    string "Client cert file name"
    default "client_cert.pem"
    help
        Name of the file that the will be read from the filesystem

config APP_AWS_CLIENT_KEY_FILE_NAME
    string "Client key file name"
    default "client_key.pem"
    help
        Name of the file that the will be read from the filesystem

endif # APP_AWS_CUSTOMIZATION

source "../mg100_firmware/mg100/coap/Kconfig"

endif # USER_APPLICATION

source "../modules/framework/Kconfig"

source "Kconfig.zephyr"
